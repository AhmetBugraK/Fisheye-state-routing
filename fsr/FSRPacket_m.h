//
// Generated file, do not edit! Created by opp_msgtool 6.1 from FSRPacket.msg.
//

#ifndef __FSRPACKET_M_H
#define __FSRPACKET_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// opp_msgtool version check
#define MSGC_VERSION 0x0601
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgtool: 'make clean' should help.
#endif

class LinkStateUpdate;
/**
 * Class generated from <tt>FSRPacket.msg:2</tt> by opp_msgtool.
 * <pre>
 * message LinkStateUpdate
 * {
 *     int sourceId;
 *     int sequenceNumber;
 *     int hopCount;
 *     int numEntries;
 *     int neighbors[];
 * }
 * </pre>
 */
class LinkStateUpdate : public ::omnetpp::cMessage
{
  protected:
    int sourceId = 0;
    int sequenceNumber = 0;
    int hopCount = 0;
    int numEntries = 0;
    int *neighbors = nullptr;
    size_t neighbors_arraysize = 0;

  private:
    void copy(const LinkStateUpdate& other);

  protected:
    bool operator==(const LinkStateUpdate&) = delete;

  public:
    LinkStateUpdate(const char *name=nullptr, short kind=0);
    LinkStateUpdate(const LinkStateUpdate& other);
    virtual ~LinkStateUpdate();
    LinkStateUpdate& operator=(const LinkStateUpdate& other);
    virtual LinkStateUpdate *dup() const override {return new LinkStateUpdate(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    virtual int getSourceId() const;
    virtual void setSourceId(int sourceId);

    virtual int getSequenceNumber() const;
    virtual void setSequenceNumber(int sequenceNumber);

    virtual int getHopCount() const;
    virtual void setHopCount(int hopCount);

    virtual int getNumEntries() const;
    virtual void setNumEntries(int numEntries);

    virtual void setNeighborsArraySize(size_t size);
    virtual size_t getNeighborsArraySize() const;
    virtual int getNeighbors(size_t k) const;
    virtual void setNeighbors(size_t k, int neighbors);
    virtual void insertNeighbors(size_t k, int neighbors);
    [[deprecated]] void insertNeighbors(int neighbors) {appendNeighbors(neighbors);}
    virtual void appendNeighbors(int neighbors);
    virtual void eraseNeighbors(size_t k);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const LinkStateUpdate& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, LinkStateUpdate& obj) {obj.parsimUnpack(b);}


namespace omnetpp {

template<> inline LinkStateUpdate *fromAnyPtr(any_ptr ptr) { return check_and_cast<LinkStateUpdate*>(ptr.get<cObject>()); }

}  // namespace omnetpp

#endif // ifndef __FSRPACKET_M_H

